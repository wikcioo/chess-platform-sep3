@page "/Login"
@using HttpClients.ClientInterfaces
@using HttpClients.ClientInterfaces.Signalr
@inject IAuthService AuthService
@inject IHubConnectionHandler HubConnectionHandler
@inject ISnackbar Snackbar
@inject NavigationManager NavMgr


<AuthorizeView>
    <NotAuthorized>
        <MudContainer MaxWidth="MaxWidth.Small">
            <MudPaper Class="pa-7 ma-10">
                <MudText Typo="Typo.h5" Align="Align.Center">Please login</MudText>
                <MudTextField InputType="InputType.Email" Label="Email" Variant="Variant.Filled" @bind-Value="_email"/>
                <MudTextField InputType="InputType.Password" Label="Password" Variant="Variant.Filled" @bind-Value="_password"/>
                <MudButton Disabled="_isLoggingIn" Class="mt-4" OnClick="LoginAsync" Variant="Variant.Filled" Color="Color.Success">Login</MudButton>
            </MudPaper>
        </MudContainer>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string _email = "";
    private string _password = string.Empty;
    private bool _isLoggingIn;

    private async Task LoginAsync()
    {
        _isLoggingIn = true;
        if (string.IsNullOrEmpty(_email))
        {
            Notify("You need to specify your email!", Severity.Error);
        }
        else if (string.IsNullOrEmpty(_password))
        {
            Notify("You need to specify your password!", Severity.Error);
        }
        else
        {
            try
            {
                await AuthService.LoginAsync(_email, _password);
                await HubConnectionHandler.StartHubConnectionAsync(AuthService);
                HubConnectionHandler.JoinUserEvents();
                NavMgr.NavigateTo("/");
            }
            catch (HttpRequestException e)
            {
                Console.WriteLine(e);
                Notify(e.Message, Severity.Error);
            }
        }
        _isLoggingIn = false;
    }

    private void Notify(string message, Severity severity)
    {
        Snackbar.Add(message, severity, options => options.CloseAfterNavigation = true);
    }

}