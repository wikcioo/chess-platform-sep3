@page "/Login"
@using HttpClients.ClientInterfaces
@using System.Text.Json.Nodes
@inject IAuthService AuthService
@inject NavigationManager NavMgr

<AuthorizeView>
    <NotAuthorized>
        <MudContainer MaxWidth="MaxWidth.Small">
            <MudPaper Class="pa-7 ma-10">
                <MudText Typo="Typo.h5" Align="Align.Center">Please login</MudText>
                <MudTextField InputType="InputType.Email" Label="Email" Variant="Variant.Filled" @bind-Value="_email"/>
                <MudTextField InputType="InputType.Password" Label="Password" Variant="Variant.Filled" @bind-Value="_password"/>
                <MudText Color="Color.Error">@_errorLabel</MudText>
                <MudButton Class="mt-4" OnClick="LoginAsync" Variant="Variant.Filled" Color="Color.Success">Login</MudButton>
            </MudPaper>
        </MudContainer>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string _email = "";
    private string _password = string.Empty;
    private string _errorLabel = string.Empty;

    private bool _isShow = false;

    private async Task LoginAsync()
    {
        _errorLabel = "";

        if (string.IsNullOrEmpty(_email))
        {
            _errorLabel = "You need to specify your email!";
        }
        else if (string.IsNullOrEmpty(_password))
        {
            _errorLabel = "You need to specify your password!";
        }
        else
        {
            try
            {
                await AuthService.LoginAsync(_email, _password);
                NavMgr.NavigateTo("/");
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                var res = JsonNode.Parse(e.Message)!;
                _errorLabel = $"Error: {res["message"]}";
            }
        }
    }

}