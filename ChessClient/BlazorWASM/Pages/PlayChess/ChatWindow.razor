@using Application.LogicInterfaces
@using Domain.DTOs.Chat
@using MudBlazor
@using Application.LogicImplementations
@using Rudzoft.ChessLib.Extensions
@inject IChatLogic ChatLogic
@implements IDisposable

<MudContainer Class="pa-0">
    <MudPaper Class="overflow-x-auto" Height="400px">@((MarkupString) _chatLog)</MudPaper>
    <MudTextField Immediate="true" T="string" InputType="InputType.Text" placeholder="Enter message" @bind-Value="_messageBody" OnKeyPress="OnKeyPress"/>
    <MudButton OnClick="WriteMessageAsync" Color="Color.Secondary">Send</MudButton>
</MudContainer>


@code {
    private string _messageBody = "";

    [Parameter]
    public ulong? GameRoom { get; set; }

    private string _chatLog = "";


    protected override async Task OnInitializedAsync()
    {
        
        ChatLogic.MessageReceived += OnMessageReceived;
        if (GameRoom != null)
        {
            await ChatLogic.StartMessagingAsync((ulong) GameRoom);
        }
    }

    public void Dispose()
    {
        ChatLogic.MessageReceived -= OnMessageReceived;
        ChatLogic.DisposeAsync();
    }


    private async Task WriteMessageAsync()
    {
        if (IsValid())
        {
            await ChatLogic.WriteMessageAsync(new MessageDto
            {
                Body = _messageBody,
                GameRoom = (ulong)GameRoom
            });
            _messageBody = "";
            StateHasChanged();
        }
    }

    private void OnMessageReceived(string chatLog)
    {
        _chatLog = chatLog;
        StateHasChanged();
    }

    private bool IsValid()
    {
        return !string.IsNullOrEmpty(_messageBody);
    }

    private async void OnKeyPress(KeyboardEventArgs e)
    {
        if (e.Code is not ("Enter" or "NumpadEnter")) return;
        if (IsValid())
        {
            await WriteMessageAsync();
        }
    }

}