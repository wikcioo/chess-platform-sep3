@using MudBlazor
@using Domain.DTOs
@using Application.LogicInterfaces
@using Domain.DTOs.GameRoomData
@using Rudzoft.ChessLib
@inject IGameLogic GameLogic
@inject ISnackbar Snackbar
@inject NavigationManager NavMgr

<MudButton @onclick="JoinRandomGame">Play Random</MudButton>
<MudTable Items="@_joinableGames" Hover="true">
    <HeaderContent>
        <MudTh>Game Id</MudTh>
        <MudTh>Opponent</MudTh>
        <MudTh>Time Control</MudTh>
        <MudTh>Side</MudTh>
        <MudTh>Join Game</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.GameRoom</MudTd>
        <MudTd DataLabel="User">@context.Username</MudTd>
        <MudTd DataLabel="Time Control">@(context.Seconds + "+" + context.Increment)</MudTd>
        <MudTd DataLabel="Side">@context.Side</MudTd>
        <MudTd DataLabel="Join">
            <MudButton @onclick="() => JoinGame(context.GameRoom)">Join</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>

@code {
    private IList<JoinableGameRoomDataDto>? _joinableGames;

    protected override async Task OnInitializedAsync()
    {
        _joinableGames = await GameLogic.GetAllJoinableGames();
    }

    private void JoinGame(ulong i)
    {
        NavMgr.NavigateTo("/ChessGame");
        GameLogic.JoinGame(new RequestJoinGameDto
        {
            GameRoom = i
        });
    }

    private void JoinRandomGame()
    {
        if (_joinableGames != null && _joinableGames.Count > 0)
        {
            NavMgr.NavigateTo("/ChessGame");
            var randomGameRoomId = _joinableGames[new Random().Next(_joinableGames.Count)].GameRoom;
            GameLogic.JoinGame(new RequestJoinGameDto
            {
                GameRoom = randomGameRoomId
            });
        }
        else
        {
            Snackbar.Add("No active games to join!", Severity.Info, config =>
            {
                config.Action = "New Game";
                config.Onclick = _ =>
                {
                    NavMgr.NavigateTo("/StartGame");
                    return Task.CompletedTask;
                };
            });
        }
    }
}