<MudGrid Justify="Justify.SpaceEvenly" Spacing="1">
    <MudItem xs="4">
        <MudNumericField T="uint" @bind-Value="TimeControlBaseMinutes" Label="Minutes" Variant="Variant.Filled"
                         Min="@(TimeControlBaseSeconds == 0 ? (uint)1 : (uint)0)"/>
    </MudItem>
    <MudItem xs="4">
        <MudNumericField T="uint" @bind-Value="TimeControlBaseSeconds" Label="Seconds" Variant="Variant.Filled" Max="60"/>
    </MudItem>
    <MudItem xs="4">
        <MudNumericField T="uint" @bind-Value="TimeControlIncrement" Label="Increment" Variant="Variant.Filled" Min="0"/>
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public uint TimeControlBaseSeconds
    {
        get => _timeControlBaseSeconds;
        set
        {
            if (_timeControlBaseSeconds == value) return;
            _timeControlBaseSeconds = value;
            TimeControlBaseSecondsChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public uint TimeControlBaseMinutes
    {
        get => _timeControlBaseMinutes;
        set
        {
            if (_timeControlBaseMinutes == value) return;
            _timeControlBaseMinutes = value;
            TimeControlBaseMinutesChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public uint TimeControlIncrement
    {
        get => _timeControlIncrement;
        set
        {
            if (_timeControlIncrement == value) return;
            _timeControlIncrement = value;
            TimeControlIncrementChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<uint> TimeControlBaseSecondsChanged { get; set; }

    [Parameter]
    public EventCallback<uint> TimeControlBaseMinutesChanged { get; set; }

    [Parameter]
    public EventCallback<uint> TimeControlIncrementChanged { get; set; }

    private uint _timeControlBaseSeconds = 0;
    private uint _timeControlBaseMinutes = 5;
    private uint _timeControlIncrement = 0;
}