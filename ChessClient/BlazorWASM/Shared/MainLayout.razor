@inherits LayoutComponentBase
@using Login
@using MudBlazor
@inject NavigationManager NavMgr
<MudThemeProvider Theme="MyCustomTheme" @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode"/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">VIA Chess</MudText>
        <MudSpacer />
        <MudIcon Icon="@Icons.Filled.Lightbulb" Color="Color.Secondary"></MudIcon>
        <MudSwitch @bind-Checked="@_isDarkMode" Color="Color.Primary" T="bool"/>
        <LoginButtons/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <MudNavLink Href="/" Match="NavLinkMatch.All">Home</MudNavLink>
            <MudNavLink Href="CreateUser" Match="NavLinkMatch.Prefix">Create User</MudNavLink>
            <MudNavGroup Title="Play" Expanded="true">
                <MudNavLink Href="ChessGame"  Match="NavLinkMatch.Prefix">Computer</MudNavLink>
                <MudNavLink Href="ChessGame"  Match="NavLinkMatch.Prefix">Online</MudNavLink>
            </MudNavGroup>
            <MudNavLink Href="/"  Match="NavLinkMatch.Prefix">About</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

<MudDialogProvider/>
<MudSnackbarProvider/>


@code {
    
    //to open the navbar
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    //for a custom theme palette

    MudTheme MyCustomTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Primary = Colors.Grey.Darken4,
            Secondary = Colors.Green.Accent4,
            AppbarBackground = Colors.BlueGrey.Darken3,
        },

        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "260px",
            DrawerWidthRight = "300px"
        }
    };
    
    // for a dark mode switch and memorization
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
}