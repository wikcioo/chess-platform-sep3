syntax = "proto3";

option csharp_namespace = "GrpcService";

package game;

message RequestGame {
  string username      = 1;
  string opponent_type = 2;
  string opponent_name = 3;
  uint32 seconds       = 4;
  uint32 increment     = 5;
  string side          = 6;
  bool   is_visible    = 7;
}

message ResponseGame {
  bool   success   = 1;
  uint64 game_room = 2;
  string opponent  = 3;
  string fen       = 4;
  bool   is_white  = 5;
}

message RequestJoinGame {
  uint64 game_room = 1;
  string username  = 2;
}

message JoinedGameStream {
  string fen            = 1;
  uint32 game_end_type  = 2;
  double time_left_ms   = 3;
  bool   is_white       = 4;
  uint32 event          = 5;
  string username_white = 6;
  string username_black = 7;
}

message RequestMakeMove {
  uint64 game_room   = 1;
  string to_square   = 2;
  string from_square = 3;
  uint32 move_type   = 4;
  uint32 promotion   = 5;
  string username    = 6;
}

message RequestResign {
  uint64 game_room = 1;
  string username  = 2;
}

message RequestDraw {
  uint64 game_room = 1;
  string username  = 2;
}

message ResponseDraw {
  uint64 game_room = 1;
  string username  = 2;
  bool   accept    = 3;
}

message SpectateableGameRoomData {
  uint64 game_room      = 1;
  string username_white = 2;
  string username_black = 3;
  uint32 seconds        = 4;
  uint32 increment      = 5;
}

message JoinableGameRoomData {
  uint64 game_room = 1;
  string username  = 2;
  uint32 seconds   = 3;
  uint32 increment = 4;
  string side      = 5;
}

message ResponseSpectateableGameRooms {
  repeated SpectateableGameRoomData game_rooms_data = 1;
}

message ResponseJoinableGameRooms {
  repeated JoinableGameRoomData game_rooms_data = 1;
}

message Acknowledge {
  uint32 status = 1;
}

message EmptyGameMessage {}

service Game {
  rpc StartGame(RequestGame) returns (ResponseGame) {}
  rpc JoinGame(RequestJoinGame) returns (stream JoinedGameStream) {}
  rpc MakeMove(RequestMakeMove) returns (Acknowledge) {}
  rpc Resign(RequestResign) returns (Acknowledge) {}
  rpc OfferDraw(RequestDraw) returns (Acknowledge) {}
  rpc DrawOfferResponse(ResponseDraw) returns (Acknowledge) {}
  rpc GetSpectateableGames(EmptyGameMessage) returns (ResponseSpectateableGameRooms) {}
  rpc GetJoinableGames(EmptyGameMessage) returns (ResponseJoinableGameRooms) {}
}
